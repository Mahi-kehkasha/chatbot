{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MOHAMMED SHAHUL\\\\OneDrive\\\\Documents\\\\work\\\\client\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport ContactList from './ContactList';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport LoadingSpinner from './LoadingSpinner';\nimport TypingIndicator from './TypingIndicator';\nimport config from '../config';\nimport Header from './Header';\nimport MessageInput from './MessageInput';\nimport CallHandler from './CallHandler';\nimport { getAvatarUrl } from '../utils/avatar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const [selectedContact, setSelectedContact] = useState(null);\n  const messagesEndRef = useRef(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isTyping, setIsTyping] = useState(false);\n  const typingTimeoutRef = useRef(null);\n  const [sendingMessage, setSendingMessage] = useState(false);\n  const [stickers, setStickers] = useState([]);\n  const [showCallHandler, setShowCallHandler] = useState(false);\n  useEffect(() => {\n    const newSocket = io(config.SOCKET_URL);\n    setSocket(newSocket);\n    return () => newSocket.close();\n  }, []);\n  useEffect(() => {\n    if (socket && user) {\n      socket.emit('login', user.id);\n      socket.on('receiveMessage', message => {\n        if (selectedContact && (message.sender === selectedContact._id || message.sender === user.id)) {\n          setMessages(prev => [...prev, message]);\n        }\n      });\n    }\n  }, [socket, user, selectedContact]);\n  const fetchMessages = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.get(`${config.API_URL}/api/messages/${selectedContact._id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setMessages(response.data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [selectedContact]);\n  useEffect(() => {\n    if (selectedContact) {\n      fetchMessages();\n    }\n  }, [selectedContact, fetchMessages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleTyping = () => {\n    if (socket && selectedContact) {\n      socket.emit('typing', {\n        to: selectedContact._id\n      });\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n      typingTimeoutRef.current = setTimeout(() => {\n        socket.emit('stopTyping', {\n          to: selectedContact._id\n        });\n      }, 1000);\n    }\n  };\n  useEffect(() => {\n    if (socket && user) {\n      socket.on('userTyping', userId => {\n        if ((selectedContact === null || selectedContact === void 0 ? void 0 : selectedContact._id) === userId) {\n          setIsTyping(true);\n        }\n      });\n      socket.on('userStoppedTyping', userId => {\n        if ((selectedContact === null || selectedContact === void 0 ? void 0 : selectedContact._id) === userId) {\n          setIsTyping(false);\n        }\n      });\n    }\n  }, [socket, user, selectedContact]);\n  const groupMessagesByDate = messages => {\n    const groups = {};\n    messages.forEach(message => {\n      const date = new Date(message.createdAt).toLocaleDateString();\n      if (!groups[date]) {\n        groups[date] = [];\n      }\n      groups[date].push(message);\n    });\n    return groups;\n  };\n  const renderMessageContent = content => {\n    if (content.startsWith('[sticker:')) {\n      const stickerId = content.match(/\\[sticker:(\\d+)\\]/)[1];\n      const sticker = stickers.find(s => s.id === parseInt(stickerId));\n      return sticker ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: sticker.url,\n        alt: sticker.label,\n        className: \"w-32 h-32 object-contain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this) : content;\n    }\n    if (content.startsWith('[gif:')) {\n      const gifUrl = content.match(/\\[gif:(.*?)\\]/)[1];\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: gifUrl,\n        alt: \"GIF\",\n        className: \"w-48 h-48 object-contain rounded-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this);\n    }\n    return content;\n  };\n  useEffect(() => {\n    // Initialize stickers\n    setStickers([{\n      id: 1,\n      url: 'https://media.giphy.com/media/LOnt6uqjD9OexmQJRB/giphy.gif',\n      label: 'Thumbs Up'\n    }, {\n      id: 2,\n      url: 'https://media.giphy.com/media/dw36yjtOAtuSZyxEJG/giphy.gif',\n      label: 'Hello'\n    }]);\n  }, []); // Run once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/4 border-r border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(ContactList, {\n          onSelectContact: setSelectedContact,\n          selectedContact: selectedContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex flex-col bg-gray-50\",\n        children: selectedContact ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 border-b bg-white shadow-sm\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: selectedContact.profilePicture || getAvatarUrl(selectedContact.username),\n                  alt: selectedContact.username,\n                  className: \"w-10 h-10 rounded-full\",\n                  onError: e => {\n                    e.target.onerror = null;\n                    e.target.src = getAvatarUrl(selectedContact.username);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"text-lg font-semibold text-gray-900\",\n                    children: selectedContact.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: `text-sm ${selectedContact.isOnline ? 'text-green-600' : 'text-gray-500'}`,\n                    children: selectedContact.isOnline ? 'Online' : 'Offline'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-2\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setShowCallHandler(true),\n                  className: \"p-2 text-gray-600 hover:text-gray-900 focus:outline-none\",\n                  title: \"Start call\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    className: \"w-6 h-6\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    viewBox: \"0 0 24 24\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 2,\n                      d: \"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n            children: isLoading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-start\",\n                children: /*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: messagesEndRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-4\",\n                children: Object.entries(groupMessagesByDate(messages)).map(([date, msgs]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-center\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"bg-gray-200 text-gray-600 text-xs px-2 py-1 rounded-full\",\n                      children: date === new Date().toLocaleDateString() ? 'Today' : date\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 29\n                  }, this), msgs.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `flex ${message.sender === user.id ? 'justify-end' : 'justify-start'}`,\n                    children: [message.sender !== user.id && /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: selectedContact.profilePicture,\n                      alt: \"\",\n                      className: \"w-8 h-8 rounded-full mr-2 self-end\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${message.sender === user.id ? 'bg-blue-600 text-white rounded-br-none' : 'bg-white text-gray-800 rounded-bl-none shadow'}`,\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"whitespace-pre-wrap break-words\",\n                        children: renderMessageContent(message.content)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 280,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `text-xs mt-1 ${message.sender === user.id ? 'text-blue-100' : 'text-gray-500'}`,\n                        children: [new Date(message.createdAt).toLocaleTimeString([], {\n                          hour: '2-digit',\n                          minute: '2-digit'\n                        }), message.sender === user.id && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"ml-2\",\n                          children: message.read ? '✓✓' : '✓'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 297,\n                          columnNumber: 39\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 283,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 33\n                    }, this)]\n                  }, message._id || index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 31\n                  }, this))]\n                }, date, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n            onSend: async content => {\n              if (content && selectedContact && !sendingMessage) {\n                setSendingMessage(true);\n                try {\n                  const response = await axios.post(`${config.API_URL}/api/messages`, {\n                    receiverId: selectedContact._id,\n                    content: content\n                  }, {\n                    headers: {\n                      Authorization: `Bearer ${localStorage.getItem('token')}`\n                    }\n                  });\n                  socket.emit('sendMessage', {\n                    ...response.data,\n                    receiverId: selectedContact._id\n                  });\n                  setMessages(prev => [...prev, response.data]);\n                } catch (error) {\n                  console.error('Error sending message:', error);\n                } finally {\n                  setSendingMessage(false);\n                }\n              }\n            },\n            disabled: !selectedContact || sendingMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center justify-center h-full text-gray-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-16 h-16 text-gray-400\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-4 text-lg\",\n            children: \"Select a contact to start chatting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), showCallHandler && /*#__PURE__*/_jsxDEV(CallHandler, {\n      selectedContact: selectedContact,\n      user: user,\n      onClose: () => setShowCallHandler(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"znBtfl7agI1dF5J+9ll04wVHaB0=\", false, function () {\n  return [useAuth];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useAuth","ContactList","io","axios","LoadingSpinner","TypingIndicator","config","Header","MessageInput","CallHandler","getAvatarUrl","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","user","messages","setMessages","socket","setSocket","selectedContact","setSelectedContact","messagesEndRef","isLoading","setIsLoading","isTyping","setIsTyping","typingTimeoutRef","sendingMessage","setSendingMessage","stickers","setStickers","showCallHandler","setShowCallHandler","newSocket","SOCKET_URL","close","emit","id","on","message","sender","_id","prev","fetchMessages","response","get","API_URL","headers","Authorization","localStorage","getItem","data","error","console","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleTyping","to","clearTimeout","setTimeout","userId","groupMessagesByDate","groups","forEach","date","Date","createdAt","toLocaleDateString","push","renderMessageContent","content","startsWith","stickerId","match","sticker","find","s","parseInt","src","url","alt","label","className","fileName","_jsxFileName","lineNumber","columnNumber","gifUrl","children","onSelectContact","profilePicture","username","onError","e","target","onerror","isOnline","onClick","title","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","ref","Object","entries","map","msgs","index","toLocaleTimeString","hour","minute","read","onSend","post","receiverId","disabled","onClose","_c","$RefreshReg$"],"sources":["C:/Users/MOHAMMED SHAHUL/OneDrive/Documents/work/client/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport ContactList from './ContactList';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport TypingIndicator from './TypingIndicator';\r\nimport config from '../config';\r\nimport Header from './Header';\r\nimport MessageInput from './MessageInput';\r\nimport CallHandler from './CallHandler';\r\nimport { getAvatarUrl } from '../utils/avatar';\r\n\r\nconst Chat = () => {\r\n  const { user } = useAuth();\r\n  const [messages, setMessages] = useState([]);\r\n  const [socket, setSocket] = useState(null);\r\n  const [selectedContact, setSelectedContact] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const typingTimeoutRef = useRef(null);\r\n  const [sendingMessage, setSendingMessage] = useState(false);\r\n  const [stickers, setStickers] = useState([]);\r\n  const [showCallHandler, setShowCallHandler] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const newSocket = io(config.SOCKET_URL);\r\n    setSocket(newSocket);\r\n\r\n    return () => newSocket.close();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (socket && user) {\r\n      socket.emit('login', user.id);\r\n\r\n      socket.on('receiveMessage', (message) => {\r\n        if (\r\n          selectedContact &&\r\n          (message.sender === selectedContact._id || message.sender === user.id)\r\n        ) {\r\n          setMessages((prev) => [...prev, message]);\r\n        }\r\n      });\r\n    }\r\n  }, [socket, user, selectedContact]);\r\n\r\n  const fetchMessages = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await axios.get(\r\n        `${config.API_URL}/api/messages/${selectedContact._id}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        }\r\n      );\r\n      setMessages(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching messages:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [selectedContact]);\r\n\r\n  useEffect(() => {\r\n    if (selectedContact) {\r\n      fetchMessages();\r\n    }\r\n  }, [selectedContact, fetchMessages]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleTyping = () => {\r\n    if (socket && selectedContact) {\r\n      socket.emit('typing', { to: selectedContact._id });\r\n\r\n      if (typingTimeoutRef.current) {\r\n        clearTimeout(typingTimeoutRef.current);\r\n      }\r\n\r\n      typingTimeoutRef.current = setTimeout(() => {\r\n        socket.emit('stopTyping', { to: selectedContact._id });\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (socket && user) {\r\n      socket.on('userTyping', (userId) => {\r\n        if (selectedContact?._id === userId) {\r\n          setIsTyping(true);\r\n        }\r\n      });\r\n\r\n      socket.on('userStoppedTyping', (userId) => {\r\n        if (selectedContact?._id === userId) {\r\n          setIsTyping(false);\r\n        }\r\n      });\r\n    }\r\n  }, [socket, user, selectedContact]);\r\n\r\n  const groupMessagesByDate = (messages) => {\r\n    const groups = {};\r\n    messages.forEach((message) => {\r\n      const date = new Date(message.createdAt).toLocaleDateString();\r\n      if (!groups[date]) {\r\n        groups[date] = [];\r\n      }\r\n      groups[date].push(message);\r\n    });\r\n    return groups;\r\n  };\r\n\r\n  const renderMessageContent = (content) => {\r\n    if (content.startsWith('[sticker:')) {\r\n      const stickerId = content.match(/\\[sticker:(\\d+)\\]/)[1];\r\n      const sticker = stickers.find((s) => s.id === parseInt(stickerId));\r\n      return sticker ? (\r\n        <img\r\n          src={sticker.url}\r\n          alt={sticker.label}\r\n          className=\"w-32 h-32 object-contain\"\r\n        />\r\n      ) : (\r\n        content\r\n      );\r\n    }\r\n    if (content.startsWith('[gif:')) {\r\n      const gifUrl = content.match(/\\[gif:(.*?)\\]/)[1];\r\n      return (\r\n        <img\r\n          src={gifUrl}\r\n          alt=\"GIF\"\r\n          className=\"w-48 h-48 object-contain rounded-lg\"\r\n        />\r\n      );\r\n    }\r\n    return content;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Initialize stickers\r\n    setStickers([\r\n      {\r\n        id: 1,\r\n        url: 'https://media.giphy.com/media/LOnt6uqjD9OexmQJRB/giphy.gif',\r\n        label: 'Thumbs Up',\r\n      },\r\n      {\r\n        id: 2,\r\n        url: 'https://media.giphy.com/media/dw36yjtOAtuSZyxEJG/giphy.gif',\r\n        label: 'Hello',\r\n      },\r\n    ]);\r\n  }, []); // Run once on mount\r\n\r\n  return (\r\n    <div className=\"h-screen flex flex-col\">\r\n      <Header />\r\n      <div className=\"flex flex-1 overflow-hidden\">\r\n        <div className=\"w-1/4 border-r border-gray-200\">\r\n          <ContactList\r\n            onSelectContact={setSelectedContact}\r\n            selectedContact={selectedContact}\r\n          />\r\n        </div>\r\n        <div className=\"flex-1 flex flex-col bg-gray-50\">\r\n          {selectedContact ? (\r\n            <>\r\n              <div className=\"p-4 border-b bg-white shadow-sm\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <img\r\n                      src={\r\n                        selectedContact.profilePicture ||\r\n                        getAvatarUrl(selectedContact.username)\r\n                      }\r\n                      alt={selectedContact.username}\r\n                      className=\"w-10 h-10 rounded-full\"\r\n                      onError={(e) => {\r\n                        e.target.onerror = null;\r\n                        e.target.src = getAvatarUrl(selectedContact.username);\r\n                      }}\r\n                    />\r\n                    <div>\r\n                      <h2 className=\"text-lg font-semibold text-gray-900\">\r\n                        {selectedContact.username}\r\n                      </h2>\r\n                      <p\r\n                        className={`text-sm ${\r\n                          selectedContact.isOnline\r\n                            ? 'text-green-600'\r\n                            : 'text-gray-500'\r\n                        }`}\r\n                      >\r\n                        {selectedContact.isOnline ? 'Online' : 'Offline'}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <button\r\n                      onClick={() => setShowCallHandler(true)}\r\n                      className=\"p-2 text-gray-600 hover:text-gray-900 focus:outline-none\"\r\n                      title=\"Start call\"\r\n                    >\r\n                      <svg\r\n                        className=\"w-6 h-6\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        viewBox=\"0 0 24 24\"\r\n                      >\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth={2}\r\n                          d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"\r\n                        />\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n                {isLoading ? (\r\n                  <LoadingSpinner />\r\n                ) : (\r\n                  <>\r\n                    {isTyping && (\r\n                      <div className=\"flex justify-start\">\r\n                        <TypingIndicator />\r\n                      </div>\r\n                    )}\r\n                    <div ref={messagesEndRef} />\r\n                    <div className=\"space-y-4\">\r\n                      {Object.entries(groupMessagesByDate(messages)).map(\r\n                        ([date, msgs]) => (\r\n                          <div key={date} className=\"space-y-4\">\r\n                            <div className=\"flex justify-center\">\r\n                              <span className=\"bg-gray-200 text-gray-600 text-xs px-2 py-1 rounded-full\">\r\n                                {date === new Date().toLocaleDateString()\r\n                                  ? 'Today'\r\n                                  : date}\r\n                              </span>\r\n                            </div>\r\n                            {msgs.map((message, index) => (\r\n                              <div\r\n                                key={message._id || index}\r\n                                className={`flex ${\r\n                                  message.sender === user.id\r\n                                    ? 'justify-end'\r\n                                    : 'justify-start'\r\n                                }`}\r\n                              >\r\n                                {message.sender !== user.id && (\r\n                                  <img\r\n                                    src={selectedContact.profilePicture}\r\n                                    alt=\"\"\r\n                                    className=\"w-8 h-8 rounded-full mr-2 self-end\"\r\n                                  />\r\n                                )}\r\n                                <div\r\n                                  className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${\r\n                                    message.sender === user.id\r\n                                      ? 'bg-blue-600 text-white rounded-br-none'\r\n                                      : 'bg-white text-gray-800 rounded-bl-none shadow'\r\n                                  }`}\r\n                                >\r\n                                  <div className=\"whitespace-pre-wrap break-words\">\r\n                                    {renderMessageContent(message.content)}\r\n                                  </div>\r\n                                  <div\r\n                                    className={`text-xs mt-1 ${\r\n                                      message.sender === user.id\r\n                                        ? 'text-blue-100'\r\n                                        : 'text-gray-500'\r\n                                    }`}\r\n                                  >\r\n                                    {new Date(\r\n                                      message.createdAt\r\n                                    ).toLocaleTimeString([], {\r\n                                      hour: '2-digit',\r\n                                      minute: '2-digit',\r\n                                    })}\r\n                                    {message.sender === user.id && (\r\n                                      <span className=\"ml-2\">\r\n                                        {message.read ? '✓✓' : '✓'}\r\n                                      </span>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        )\r\n                      )}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n              <MessageInput\r\n                onSend={async (content) => {\r\n                  if (content && selectedContact && !sendingMessage) {\r\n                    setSendingMessage(true);\r\n                    try {\r\n                      const response = await axios.post(\r\n                        `${config.API_URL}/api/messages`,\r\n                        {\r\n                          receiverId: selectedContact._id,\r\n                          content: content,\r\n                        },\r\n                        {\r\n                          headers: {\r\n                            Authorization: `Bearer ${localStorage.getItem(\r\n                              'token'\r\n                            )}`,\r\n                          },\r\n                        }\r\n                      );\r\n\r\n                      socket.emit('sendMessage', {\r\n                        ...response.data,\r\n                        receiverId: selectedContact._id,\r\n                      });\r\n                      setMessages((prev) => [...prev, response.data]);\r\n                    } catch (error) {\r\n                      console.error('Error sending message:', error);\r\n                    } finally {\r\n                      setSendingMessage(false);\r\n                    }\r\n                  }\r\n                }}\r\n                disabled={!selectedContact || sendingMessage}\r\n              />\r\n            </>\r\n          ) : (\r\n            <div className=\"flex flex-col items-center justify-center h-full text-gray-500\">\r\n              <svg\r\n                className=\"w-16 h-16 text-gray-400\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\r\n                />\r\n              </svg>\r\n              <p className=\"mt-4 text-lg\">Select a contact to start chatting</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {showCallHandler && (\r\n        <CallHandler\r\n          selectedContact={selectedContact}\r\n          user={user}\r\n          onClose={() => setShowCallHandler(false)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}