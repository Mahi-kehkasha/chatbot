{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MOHAMMED SHAHUL\\\\OneDrive\\\\Documents\\\\work\\\\client\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport ContactList from './ContactList';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport LoadingSpinner from './LoadingSpinner';\nimport TypingIndicator from './TypingIndicator';\nimport config from '../config';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [socket, setSocket] = useState(null);\n  const [selectedContact, setSelectedContact] = useState(null);\n  const messagesEndRef = useRef(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isTyping, setIsTyping] = useState(false);\n  const typingTimeoutRef = useRef(null);\n  useEffect(() => {\n    const newSocket = io(config.SOCKET_URL);\n    setSocket(newSocket);\n    return () => newSocket.close();\n  }, []);\n  useEffect(() => {\n    if (socket && user) {\n      socket.emit('login', user.id);\n      socket.on('receiveMessage', message => {\n        if (selectedContact && (message.sender === selectedContact._id || message.sender === user.id)) {\n          setMessages(prev => [...prev, message]);\n        }\n      });\n    }\n  }, [socket, user, selectedContact]);\n  const fetchMessages = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.get(`http://localhost:5000/api/messages/${selectedContact._id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setMessages(response.data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [selectedContact]);\n  useEffect(() => {\n    if (selectedContact) {\n      fetchMessages();\n    }\n  }, [selectedContact, fetchMessages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (newMessage.trim() && socket && selectedContact) {\n      try {\n        const response = await axios.post('http://localhost:5000/api/messages', {\n          receiverId: selectedContact._id,\n          content: newMessage\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        socket.emit('sendMessage', response.data);\n        setMessages(prev => [...prev, response.data]);\n        setNewMessage('');\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  const handleTyping = () => {\n    if (socket && selectedContact) {\n      socket.emit('typing', {\n        to: selectedContact._id\n      });\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n      typingTimeoutRef.current = setTimeout(() => {\n        socket.emit('stopTyping', {\n          to: selectedContact._id\n        });\n      }, 1000);\n    }\n  };\n  useEffect(() => {\n    if (socket && user) {\n      socket.on('userTyping', userId => {\n        if ((selectedContact === null || selectedContact === void 0 ? void 0 : selectedContact._id) === userId) {\n          setIsTyping(true);\n        }\n      });\n      socket.on('userStoppedTyping', userId => {\n        if ((selectedContact === null || selectedContact === void 0 ? void 0 : selectedContact._id) === userId) {\n          setIsTyping(false);\n        }\n      });\n    }\n  }, [socket, user, selectedContact]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4\",\n      children: /*#__PURE__*/_jsxDEV(ContactList, {\n        onSelectContact: setSelectedContact,\n        selectedContact: selectedContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col bg-gray-50\",\n      children: selectedContact ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b bg-white shadow-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: selectedContact.profilePicture,\n              alt: selectedContact.username,\n              className: \"w-10 h-10 rounded-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-lg font-semibold text-gray-900\",\n                children: selectedContact.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: `text-sm ${selectedContact.isOnline ? 'text-green-600' : 'text-gray-500'}`,\n                children: selectedContact.isOnline ? 'Online' : 'Offline'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n          children: isLoading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex ${message.sender === user.id ? 'justify-end' : 'justify-start'}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${message.sender === user.id ? 'bg-blue-600 text-white rounded-br-none' : 'bg-white text-gray-800 rounded-bl-none shadow'}`,\n                children: [message.content, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `text-xs mt-1 ${message.sender === user.id ? 'text-blue-100' : 'text-gray-500'}`,\n                  children: new Date(message.createdAt).toLocaleTimeString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 21\n            }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-start\",\n              children: /*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: sendMessage,\n          className: \"p-4 bg-white border-t\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newMessage,\n              onChange: e => {\n                setNewMessage(e.target.value);\n                handleTyping();\n              },\n              className: \"flex-1 px-4 py-2 border rounded-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n              placeholder: \"Type a message...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"px-6 py-2 bg-blue-600 text-white rounded-full hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors duration-150\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center h-full text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-16 h-16 text-gray-400\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4 text-lg\",\n          children: \"Select a contact to start chatting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"Fzesj33WeQ6njMr+H2lbjkLoG8A=\", false, function () {\n  return [useAuth];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useAuth","ContactList","io","axios","LoadingSpinner","TypingIndicator","config","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","user","messages","setMessages","newMessage","setNewMessage","socket","setSocket","selectedContact","setSelectedContact","messagesEndRef","isLoading","setIsLoading","isTyping","setIsTyping","typingTimeoutRef","newSocket","SOCKET_URL","close","emit","id","on","message","sender","_id","prev","fetchMessages","response","get","headers","Authorization","localStorage","getItem","data","error","console","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","e","preventDefault","trim","post","receiverId","content","handleTyping","to","clearTimeout","setTimeout","userId","className","children","onSelectContact","fileName","_jsxFileName","lineNumber","columnNumber","src","profilePicture","alt","username","isOnline","map","index","Date","createdAt","toLocaleTimeString","ref","onSubmit","type","value","onChange","target","placeholder","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","_c","$RefreshReg$"],"sources":["C:/Users/MOHAMMED SHAHUL/OneDrive/Documents/work/client/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport ContactList from './ContactList';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport TypingIndicator from './TypingIndicator';\r\nimport config from '../config';\r\n\r\nconst Chat = () => {\r\n  const { user } = useAuth();\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [socket, setSocket] = useState(null);\r\n  const [selectedContact, setSelectedContact] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const typingTimeoutRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const newSocket = io(config.SOCKET_URL);\r\n    setSocket(newSocket);\r\n\r\n    return () => newSocket.close();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (socket && user) {\r\n      socket.emit('login', user.id);\r\n\r\n      socket.on('receiveMessage', (message) => {\r\n        if (\r\n          selectedContact &&\r\n          (message.sender === selectedContact._id || message.sender === user.id)\r\n        ) {\r\n          setMessages((prev) => [...prev, message]);\r\n        }\r\n      });\r\n    }\r\n  }, [socket, user, selectedContact]);\r\n\r\n  const fetchMessages = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:5000/api/messages/${selectedContact._id}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        }\r\n      );\r\n      setMessages(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching messages:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [selectedContact]);\r\n\r\n  useEffect(() => {\r\n    if (selectedContact) {\r\n      fetchMessages();\r\n    }\r\n  }, [selectedContact, fetchMessages]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (newMessage.trim() && socket && selectedContact) {\r\n      try {\r\n        const response = await axios.post(\r\n          'http://localhost:5000/api/messages',\r\n          {\r\n            receiverId: selectedContact._id,\r\n            content: newMessage,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        socket.emit('sendMessage', response.data);\r\n        setMessages((prev) => [...prev, response.data]);\r\n        setNewMessage('');\r\n      } catch (error) {\r\n        console.error('Error sending message:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleTyping = () => {\r\n    if (socket && selectedContact) {\r\n      socket.emit('typing', { to: selectedContact._id });\r\n\r\n      if (typingTimeoutRef.current) {\r\n        clearTimeout(typingTimeoutRef.current);\r\n      }\r\n\r\n      typingTimeoutRef.current = setTimeout(() => {\r\n        socket.emit('stopTyping', { to: selectedContact._id });\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (socket && user) {\r\n      socket.on('userTyping', (userId) => {\r\n        if (selectedContact?._id === userId) {\r\n          setIsTyping(true);\r\n        }\r\n      });\r\n\r\n      socket.on('userStoppedTyping', (userId) => {\r\n        if (selectedContact?._id === userId) {\r\n          setIsTyping(false);\r\n        }\r\n      });\r\n    }\r\n  }, [socket, user, selectedContact]);\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <div className=\"w-1/4\">\r\n        <ContactList\r\n          onSelectContact={setSelectedContact}\r\n          selectedContact={selectedContact}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"flex-1 flex flex-col bg-gray-50\">\r\n        {selectedContact ? (\r\n          <>\r\n            <div className=\"p-4 border-b bg-white shadow-sm\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                <img\r\n                  src={selectedContact.profilePicture}\r\n                  alt={selectedContact.username}\r\n                  className=\"w-10 h-10 rounded-full\"\r\n                />\r\n                <div>\r\n                  <h2 className=\"text-lg font-semibold text-gray-900\">\r\n                    {selectedContact.username}\r\n                  </h2>\r\n                  <p\r\n                    className={`text-sm ${\r\n                      selectedContact.isOnline\r\n                        ? 'text-green-600'\r\n                        : 'text-gray-500'\r\n                    }`}\r\n                  >\r\n                    {selectedContact.isOnline ? 'Online' : 'Offline'}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n              {isLoading ? (\r\n                <LoadingSpinner />\r\n              ) : (\r\n                <>\r\n                  {messages.map((message, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`flex ${\r\n                        message.sender === user.id\r\n                          ? 'justify-end'\r\n                          : 'justify-start'\r\n                      }`}\r\n                    >\r\n                      <div\r\n                        className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${\r\n                          message.sender === user.id\r\n                            ? 'bg-blue-600 text-white rounded-br-none'\r\n                            : 'bg-white text-gray-800 rounded-bl-none shadow'\r\n                        }`}\r\n                      >\r\n                        {message.content}\r\n                        <div\r\n                          className={`text-xs mt-1 ${\r\n                            message.sender === user.id\r\n                              ? 'text-blue-100'\r\n                              : 'text-gray-500'\r\n                          }`}\r\n                        >\r\n                          {new Date(message.createdAt).toLocaleTimeString()}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                  {isTyping && (\r\n                    <div className=\"flex justify-start\">\r\n                      <TypingIndicator />\r\n                    </div>\r\n                  )}\r\n                  <div ref={messagesEndRef} />\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            <form onSubmit={sendMessage} className=\"p-4 bg-white border-t\">\r\n              <div className=\"flex space-x-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={newMessage}\r\n                  onChange={(e) => {\r\n                    setNewMessage(e.target.value);\r\n                    handleTyping();\r\n                  }}\r\n                  className=\"flex-1 px-4 py-2 border rounded-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                  placeholder=\"Type a message...\"\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-6 py-2 bg-blue-600 text-white rounded-full hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors duration-150\"\r\n                >\r\n                  Send\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </>\r\n        ) : (\r\n          <div className=\"flex flex-col items-center justify-center h-full text-gray-500\">\r\n            <svg\r\n              className=\"w-16 h-16 text-gray-400\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth={2}\r\n                d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\r\n              />\r\n            </svg>\r\n            <p className=\"mt-4 text-lg\">Select a contact to start chatting</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}